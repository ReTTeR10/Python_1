__author__ = 'Мишин Егор Олегович'
# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

print('\n Задача 1, последовательность Фибоначчи: \n')
def fibonacci(n, m):
    if n == 0 or m == 0:
        print('Неверные данные')


    line = [1, 1]                                # первые 2 элемента последовательности
    i = 2
    while i != m:
        line.append(int(line[i-2])+line[i-1])    # составляем последовательность до крайнего элемента m
        i += 1

    return line[n-1:m]  # Получаем последовательность Фибоначчи, с элемента n по элемент m

print(fibonacci(4, 20))                # Сюда вносим значения n и m соответственно

# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()

print('\n Задача 2: сортировка \n')

def sort_to_max(origin_list):               # функция сортировки списка
    n = 1
    while n < len(origin_list):             # сортировка "пузырьком"
        for i in range(len(origin_list) - n):   # в цикле если текущий элемент больше след, меняем местами
            if origin_list[i] > origin_list[i + 1]:
                origin_list[i], origin_list[i + 1] = origin_list[i + 1], origin_list[i]
        n += 1
    return print(origin_list)
sort_to_max([2, 10, -12, 2.5, 20, -11, 4, 4, 0])

# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.

print('\n Задача 3 - Фильтр')


def alter_filter(condition, list1):  # получаем в условие в виде строки, и некоторый список, который нужно отфильтровать
    fil_list = []
    for x in list1:                  # перебираем значения в пришедшем списке
        if eval(condition) == True:  # eval - выполняет выражение переданное в строковом виде
            fil_list.append(x)       # формируем отфильтрованный список
    return fil_list


print(alter_filter('x!=5', [0, 12, 4, 5, 11, 3, 121, 5, 5]))

# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

print('\n Задача 4 - параллелогамм')

def parallelogram(a, b, c, d):

    import math
    a1 = ''
    b1 = ''
    c1 = ''
    d1 = ''

    a1 = a.split(' ')
    b1 = b.split(' ')
    c1 = c.split(' ')
    d1 = d.split(' ')

    ab = math.sqrt(((eval(b1[0])-eval(a1[0]))**2)+(eval(b1[1])-eval(a1[1]))**2)  # Считаем длину отрезков
    cd = math.sqrt(((eval(d1[0])-eval(c1[0]))**2)+(eval(d1[1])-eval(c1[1]))**2)
    ad = math.sqrt(((eval(d1[0])-eval(a1[0]))**2)+(eval(d1[1])-eval(a1[1]))**2)
    bc = math.sqrt(((eval(c1[1])-eval(b1[1]))**2)+(eval(c1[0])-eval(b1[0]))**2)
    print('\nAB = ', ab, '\nCD = ', cd, '\nAD = ', ad, '\nBC = ', bc)
    if ab == cd:
        if ad == bc:                            # по свойству пар-ма, если противоположные стороны равны то это пар-м
            print('Да, является')
        else:
            print('Нет, не является')
    else:
        print('Нет, не является')
    return



print('Введите координаты вида "x y", через пробел')
A1 = input("A1: ")              # 1 3    <====    ПРИМЕР
A2 = input("А2: ")              # 4 7
A3 = input("А3: ")              # 2 8
A4 = input("А4: ")              # -1 4


parallelogram(A1, A2, A3, A4)
